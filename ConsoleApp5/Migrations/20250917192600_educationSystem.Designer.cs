// <auto-generated />
using System;
using ConsoleApp5.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(APPdb))]
    [Migration("20250917192600_educationSystem")]
    partial class educationSystem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseStudents", b =>
                {
                    b.Property<int>("CoursesCourseID")
                        .HasColumnType("int");

                    b.Property<int>("studentsStudentID")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseID", "studentsStudentID");

                    b.HasIndex("studentsStudentID");

                    b.ToTable("CourseStudents");
                });

            modelBuilder.Entity("P01_StudentSystem.model.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseID"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("endDate")
                        .HasColumnType("date");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<DateOnly>("startDate")
                        .HasColumnType("date");

                    b.HasKey("CourseID");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("P01_StudentSystem.model.HomeWorkSubmissions", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeworkId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.HasKey("HomeworkId");

                    b.HasIndex("courseID");

                    b.HasIndex("studentID");

                    b.ToTable("HW");
                });

            modelBuilder.Entity("P01_StudentSystem.model.Resources", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.HasKey("ResourceId");

                    b.HasIndex("courseID");

                    b.ToTable("resources");
                });

            modelBuilder.Entity("P01_StudentSystem.model.Students", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<int>("PhoneNum")
                        .HasColumnType("int");

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("registerdOn")
                        .HasColumnType("date");

                    b.HasKey("StudentID");

                    b.ToTable("students");
                });

            modelBuilder.Entity("CourseStudents", b =>
                {
                    b.HasOne("P01_StudentSystem.model.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.model.Students", null)
                        .WithMany()
                        .HasForeignKey("studentsStudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("P01_StudentSystem.model.HomeWorkSubmissions", b =>
                {
                    b.HasOne("P01_StudentSystem.model.Course", "course")
                        .WithMany("submissions")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.model.Students", "student")
                        .WithMany("submissions")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("student");
                });

            modelBuilder.Entity("P01_StudentSystem.model.Resources", b =>
                {
                    b.HasOne("P01_StudentSystem.model.Course", "course")
                        .WithMany("resource")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");
                });

            modelBuilder.Entity("P01_StudentSystem.model.Course", b =>
                {
                    b.Navigation("resource");

                    b.Navigation("submissions");
                });

            modelBuilder.Entity("P01_StudentSystem.model.Students", b =>
                {
                    b.Navigation("submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
